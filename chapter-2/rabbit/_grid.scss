@use 'sass:math';

$grid-columns : 12;
$grid-gaps: (
    '0':0,
    '1':10px,
    '2':20px,
    '3':30px
);

$layout-values: flex-start, flex-end,center,space-between,space-around;



// base layout classes
.container {
    width:100%;
    max-width: 1200px;
    margin: 0 auto; // 0 (top / bottom) ||| auto -> will margin directly in center from left / right.
    padding: 0 20;
    box-sizing: border-box; // Will make border & padding incorporate into the overall width. 
}

.row {
    display: flex;
    flex-flow: row wrap;
}

// Justify content classes
@each $value in $layout-values{
    .justify-#{$value}{
        justify-content:$value;
    }
}

// grid gaps
@each $key, $value in $grid-gaps{
    .gap-#{$key} > *{ // Create padding for each by size.
        padding: $value;
    }
    .gap-#{$key}{
        // Will clean the padding from the sides on first & last item.
        margin-left: -$value;
        margin-right: -$value;
    }
}

// col classes
@include xs {
    @for $index from 1 through $grid-columns{ // iterate 12 times
        .col-#{$index}-xs { // Create for extra small
            box-sizing:border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}
@include sm {
    @for $index from 1 through $grid-columns{ // iterate 12 times
        .col-#{$index}-sm { // Create for small
            box-sizing:border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}
@include md {
    @for $index from 1 through $grid-columns{ // iterate 12 times
        .col-#{$index}-md {// Create for medium
            box-sizing:border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}
@include lg {
    @for $index from 1 through $grid-columns{ // iterate 12 times
        .col-#{$index}-lg { // Create for large
            box-sizing:border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}
@include xl {
    @for $index from 1 through $grid-columns{ // iterate 12 times
        .col-#{$index}-xl { // Create for extra large
            box-sizing:border-box;
            flex-grow: 0;
            width: math.div($index * 100%, $grid-columns);
        }
    }
}